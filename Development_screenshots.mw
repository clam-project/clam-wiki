This page hosts screenshots galleries of the ongoing development of CLAM and its applications.

= Upcoming 1.1.1 (1.2?) =
<gallery>
Image:MegaAnnotator.png|Annotator, with two segmentation views and two frame level descriptors views and a bargraph view all at the same time.
Image:NewOldAnnotator.png|Meet the new Annotator... same as the old Annotator.  Annotator looking the same as it used to-- after some major gutting!
Image:LadspaInMacOSX.png|Mac OSX NetworkEditor also supports LADSPA plugins.
Image:CardinalVowel.png|Abe's example network of CardinalVowel. The input represents the location of the vowel with respect to cardinal vowels, eight evenly spaced vowels that start with iy (high front vowel) -> ey -> eh -> ae -> aa -> ao -> ow -> uw.
Image:CLAMTonalAnalysis.png|CLAM Tonal Analysis example with scrolling spectrogram in place
Image:Spectrogram-NotAMatterOfSize.png|It was not a matter of size just about being a size power of 2. NFrames fixed to such a power, nbins is the next power of two of the actual nbins.
Image:Smoothandscrolling.png|Smoothed, scrolling spectrogram in networkeditor
Image:Spectrogram-adjustedtexcoords.png|By adjusting the tex-coords to remove the trailing bins. Also reactivated smoothing. Not sure whether it is the better default.
Image:Spectrogram-pitchslide.png|Sliding the pitch up and down. We should get ride of the bins we are not using.
Image:Spectrogram-notincrementing.png|Someone filling just one row.
Image:Spectrogram-normalized.png|After normalization.
Image:Spectrogram-blackbackground.png|Texture of proper size, now values are too low, missing normalize.
Image:Spectrogram-yellowbackground.png|First try for an spectrogram.
Image:AnnotatorMultipleSegmentationPanes.png|That's how the annotator will look with several segmentation panes. Crafted by hand but it works.
Image:ManyMonitorsContextualMenu.png|Now almost all processing-data have at least one port monitor.
Image:PortMonitorsContextualMenu.png|The contextual menu of an out port now let the user choose a port monitor. And only the ones that matches with the port type. This also supports processings and types added in CLAM plugins.
Image:PluginTypeColoring.png|Types defined in plugins can now take a color too. Here ComplexSpectrum and MagPhaseSpectrum are types defined in a plugin.
Image:SchemaBrowser-Hierarchy.png|Annotator's schema browser display child scopes in hierarchy.
Image:OptimizingSpectral-After.png|Spectral processing after optimization. Comparatively the MagPhaseProduct is cheaper than ComplexProduct but it requires two conversions which are lot more expensive. (take the numbers proportional to the number of executions)
Image:OptimizingSpectral-Before.png|Spectral processing before optimization. The mixer takes it all. AudioSource and Sink wasting the time on DT accessors. AudioWindowing is doing dummy Windowings and Shift.
Image:OptimizingSpectral-Setup.png|Simplifying spectral processing: Complex and MagPhase spectra. Explicit conversions. Segregating Streaming audio and buffered audio. Two products are present to benchmark them.
Image:ColoredPorts.png|Now ports are colored by token type. Why we took so long to incorporate this functionality? :)
Image:BarGraph with Labels.png|BarGraph InstantView in Annotator displaying Spectrum Magnitude with bin labels.
Image:RulerTicksAndSubticks.png|Annotator rulers are displayed at rounded points. Also Subticks are displayed on horitzontal rulers.
Image:ClamPluginInWindows.png|Plugins are working!! A processing from run-time loaded plugin (working in wine).
Image:MingwWinePrototyper.png|A mingw32 crosscompiled Prototyper working under Wine. This means that now XML is working. Still OpenGl widgets do not in Wine but they work perfectly in a regular Windows.
Image:MingwWindowsNetEditor.png|The crosscompiled NetworkEditor (in Linux) now working in a real Windows!!!
Image:MingwWineNetEditor.png|A mingw32 crosscompiled NetworkEditor working under Wine!!!
</gallery>

= 1.1 =
<gallery>
Image:AnnotatorBarGraph.png|The BarGraph as instant view on the Annotator
Image:OptimizedKeySpace.png|Gonzalez bross (Sergi and Eduard) helped me with some ideas on how to optimize my poor implementation of the KeySpace. 7 smooth KeySpaces on the screen with a decent frame rate and no penalty on the playback. Even with no HW acceleration.
Image:SampleBySample.png|Experiments in sample by sample processing in CLAM. This is a 5th order FIR filter implemented with delay lines.
Image:automatic-sliders-contextual-menu.png|Now automatic slider action also apears in the contextual menu.
Image:automatic-control-senders.png|This network with many control senders has been created in few seconds. How? A new feature automatically creates a well configured control-sender by double-clicking an incontrol.
Image:Spectral-UI.png|A well tuned user interface for Spectral Transformations network. It uses last widgets both vectorial with shades and pixmap based from pkwidgets. 
Image:Qsynth-knobs-properties.png|Configuration properties: Three modes of mouse interaction: QDial, Angular and Linear.
Image:Qsynth-knobs-shadows2.png|Casting shadows on a dark background.
Image:Qsynth-knobs-shadows1.png|Casting shadows on a clear background.
Image:openingFaustSvgInEog.png|First attempt to open a faust svg from NE. Eog doesn't permit navigation though.
Image:Qsynth-knobs-configColors.png|That's what happens when you are able to change colors. Notice the shadowed pointer.
Image:Qsynth-knobs-default.png|This is how they look on a default kubuntu theme.
Image:Qsynth-knobs-NetEditor.png|That's how they look the knobs on the NetEditor.
Image:Qsynth-knobs.png|Cute knobs from QSynth, ported and enhanced. QGradient based, no pixmap cache (made it slower), parametric geometry...
Image:genderchange-pkwidgets.png|Pixmap button added to the realtime gender change interface. Now buttons with the 'InControlBool__' name prefix can send boolean controls on check.
Image:pixmapbutton-properties.png|Pixmap button properties to change the base pixmap. By appending 000.png, 001.png... Buttons can also choose the triplet (normally different colors)
Image:pkwidgets-fun2-paubox.png|Impressive widgets! this is how it looks in my box. --pau.
Image:pkwidgets-fun2.png|Even more fun, pixmap buttons and a wider version of mixer sliders.
Image:pkwidgets-fun.png|Getting fun with interfaces.
Image:pkwidgets-designer.png|Prototyping interfaces combining PK widgets and CLAM widgets.
Image:pkwidgets-qt4.png|PKWidgets c++ port, rescued from draft and ported to qt4.
Image:mfcc-lpc.png|Realtime MFCC and LPC analysis integrated in a single interface.
Image:mfcc.png|Realtime MFCC analysis.
Image:ControlSurface.png|Control surface, controling two control parameters by moving a 2D point. Used to control F1 and F2 of the vowel synthesis.
Image:VumeterReloaded.png|A new bunch of Designer attributes for the VuMeter. The behaviour has been improved: Uses max instead squared sum, log scale and peak memory led.
Image:SpectrumDummyData.png|Dummy data for the SpectrumView while used on the designer. The scale has been modified to fit unwindowed spectrums.
Image:LPC-envelope.png|33th order LPC Coefficients, now with base on zero. Left-center: spectral envelope derived from such LPC's. Left-below: FFT spectrum of the same frame.
Image:LPC-prototyper.png|Prototyper interface for LPC AutoCorrelation analysis.
Image:LPC.png|A network LPC AutoCorrelation analysis in streaming. It also shows the new AudioWindowing processing, the complementary to the AudioOverlapAndAdd.
Image:embedded-networks.png|Prototype interface for embedding CLAM networks in a processing component.
Image:genderchange-interface2.png|Gender change interface reloaded.
Image:genderchange-interface.png|A quick and dirty interface for GenderChange.
Image:genderchange.png|GenderChange fully working in realtime.
Image:smstools-menu-file.png|SMSTools Menu reorganization, File menu: Kept here just the items to manage configurations and exit. The rest of items have been distributed along other pullmenus.
Image:smstools-menu-view.png|SMSTools Menu reorganization, View menu: no change.
Image:smstools-menu-transformation.png|SMSTools Menu reorganization, Transformation menu: added here the items to edit and load an score.
Image:smstools-menu-synthesis.png|SMSTools Menu reorganization, Synthesis menu: moved here items to save synthesis results.
Image:smstools-menu-analysis.png|SMSTools Menu reorganization, Analysis menu: moved here all the entries to load and save analysis and melody results. Disabled item is 'Save Melody', my weird dark style almost hide it :-(
Image:smstools-menu-help.png|SMSTools Menu reorganization, Help menu: removed the redundant license item already present in the About dialog. Not shown but the pulldown menu is now 'Help' instead '?'.
Image:smstools-uselesslicensedialog.png|Temptative SMSTools port to qt4: I thought it was broken. No, this dialog is that useless, we already do that on the about.
Image:smstools-blankviews.png|Temptative SMSTools port to qt4: Some views are not updated (due to signals not reaching the target).
Image:smstools-submenus.png|Temptative SMSTools port to qt4: The porting tool duplicates submenus.
Image:smstools-about.png|Temptative SMSTools port to qt4: Images had to be put on a resource file.
Image:Voice2Midi-qt4.png|Voice2Midi ported to qt4 using qt3support classes (Zach Welch patch).
Image:ControlSenderWidgets.png|New control sender widgets. First-try patch from Zach Welch.
Image:outcontrolsender.png|New OutControlSender interface options.

</gallery>

= 0.99 aka 1.0 =

<gallery>
Image:NetworkEditor_twoLadspas.png|Two Ladspa plugins with complicate connections.
Image:NetworkEditor_manyLadspas.png|Many Ladspa plugins working as CLAM processings.
Image:AssertHandler.png|Assert messages on a dialog with a link to the bug tracking system.
Image:Prototyper-JackNames.png|Prototyper takes jack client names from the network files.
Image:IFFTAndNames.png|Testing differences using spectrum substract and inverse FFT's.
Image:FFTW3.png|FFTW-3 on parallel with a FFTW-2 (to be deprecated)
Image:FilePlayerWithOscilloscope.png|The file player network example has now an oscilloscope
</gallery>

= 0.98 =


== Desktop integration ==

<gallery>
Image:Konqueror-networkicons.png|KDE integration using legacy mime system. KDE is not freedesktop compliant yet. so .
</gallery>

== Back to Mac ==

Today we have again almost all the applications compiling on MacOSX. 
Including the new NetworkEditor 0.4 and the tonal analysis processing.
Some work is still needed as you can see on the following screenshots.
Still nothing done to have binary packages working again, but at least it compiles.

<gallery>
Image:NetEditQt4-MacOSX-tonal.png|The first time NetworkEditor 0.4 have shown up its face in MacOSX!.
Image:NetEditQt4-MacOSX-smstransposition.png|Another MacOSX screenshot, now with SMSTransposition (bug: red points do not appear).
Image:Annotator-MacOSX-firsttry.png|The first compilation of Annotator with Qt4.2 in MacOSX It has some layout problems.
Image:Prototyper-MacOSX.png|Prototyper in MacOSX, doesn't show plugins. Still some work to do to have working qt plugins.
Image:Prototyper-PluginsWorking-MacOSX.png|And now with the work done!
Image:SMSTools-macosx.png|SMSTools showing sinusoidal tracks and spectrum in the Mac OSX platform.
</gallery>

= 0.95 =

== Network editor port to Qt4 ==

We are working hard on having a first '''Qt4''' port of the Network Editor doing some extra effort on '''usability'''.
Take a look at the [http://iua-share.upf.es/wikis/clam_draft/Network_Editor_Qt4_Port|Port progress page]. 
Here you have some preview screenshots for stage 1 (interface), stage 2 (real network inside) and stage 3 (data visualization and GUI prototyping):

<gallery>

Image:NetEditQt4-EmptyCanvas.png|Common menu options are now available from a handy tool bar.
Image:NetEditQt4-CanvasWhatsThis.png|Are you lost? Use the "What's this" button, Luke.
Image:NetEditQt4-ToolBoxDragNDrop.png|Dragging a processing from the toolbox into the canvas.
Image:NetEditQt4-ProcessingBox.png|Processings in the new version will look something like this.
Image:NetEditQt4-ProcessingWhatsThis.png|Lost again?
Image:NetEditQt4-ExploringConnectors.png|Explore connectors by hovering them.
Image:NetEditQt4-WireTargetTooltip.png|Tooltip and highlight helps you to figure out where are you going to drop the wire.
Image:NetEditQt4-PortAndControlWires.png|Some controls and ports wires.
Image:NetEditQt4-ProcessingsContextActions.png|Context menu for processings allows you to configure or remove them.
Image:NetEditQt4-ConnectorsContextActions.png|Context menu for connectors allows you to disconnect them. You can also copy a widget name to be used in the Prototyper. (see the [[Network Editor tutorial]])
Image:NetEditQt4-CanvasContextActions.png|Context menu for canvas gives another interface to create processings.
Image:NetEditQt4-Transparencies.png|With semitransparencies you can see that something is under that big processing.
Image:NetEditQt4-PdfExport.png|The print option is very useful for generating pdf's for your papers.
Image:NetEditQt4-SMSMess.png|Loading and saving networks is working: SMSMess loaded into the Qt4 interface.
Image:NetEditQt4-SMSMessPortTooltip.png|Taking the port names from the network.
Image:NetEditQt4-XMLError.png|Error instead crash with bad xml format.
Image:NetEditQt4-XMLFactoryError.png|Error instead crash with unsuported processing types on the network file.
Image:NetEditQt4-FactoryError.png|Error instead crash when dropping unsuported processing types from the toolbox.
Image:NetEditQt4-ZoomIn.png|Zoom in.
Image:NetEditQt4-ZoomOut.png|Zoom out.
Image:NetEditQt4-Unconfigured.png|Woops, this processing is not properly configured.
Image:NetEditQt4-UnconfiguredMessage.png|Pass over the processing to see what's the problem.
Image:NetEditQt4-ForbidenDrop.png|Red highlight: You cannot drop the wire here. Types doesn't match: Spectrum -> Audio.
Image:NetEditQt4-AllowedDrop.png|Green highlight: But you can drop it here. Types matches. Audio -> Audio.
Image:NetEditQt4-DummyConfig.png|In dummy mode (no CLAM network, just drawing), configuration allows to choose any number of ports and controls.
Image:NetEditQt4-SubConfigs.png|Real config dialog and some subdialogs for the SMSAnnalysis.
Image:NetEditQt4-ScrollBars.png|Scrollbars appear when the networks goes beyond the viewport.
Image:NetEditQt4-TutorialButton.png|One click access to the online tutorial.
Image:NetEditQt4-EmbededSlider.png|Processing boxes may have a widget embeded on the body. Still some overlap artifacts but they are working even with zoom factors.
Image:NetEditQt4-SpectralNetworkWithControlSenders.png|The Spectral Network example with working control senders.
Image:NetEditQt4-PlayProtection.png|Fixed: System hanged on realtime kernels. Now, hang conditions are detected and gracefully handled.
Image:NetEditQt4-MultiJack.png|JACK is back. Multiple Jack outputs.
Image:NetEditQt4-BackendAlsaStopped.png|Indicators: Alsa backend. Stopped.
Image:NetEditQt4-BackendJackPlaying.png|Indicators: Jack backend. Playing. Jack is choosen when available, else falling back to Alsa.
Image:NetEditQt4-Proto-prototyper.png|First Qt4 based prototyper. Still no plots, but unified binary for Jack and Alsa/DirectX.
Image:NetEditQt4-DefaultPrototyperInterace.png|No interface? Prototyper will provide you a default one.
Image:NetEditQt4-DummyIndicator.png|The 'dummy' mode indicator.
Image:NetEditQt4-PrototyperIndicators.png|Defining labels as indicators for a prototyper interface (already added to the default interface)
Image:NetEditQt4-PrototyperQJackCtl.png|Prototyper playing with qjackctl
Image:NetEditQt4-PortMonitor-ProofOfConcept.png|A very simple vumeter. Just a PortMonitor proof of concept
Image:NetEditQt4-PortMonitor-Oscilloscope.png|An oscilloscope.
Image:NetEditQt4-PortMonitor-OscilloscopeSpectrumVumeter.png|Oscilloscope, spectrums and vumeters, all working.
Image:NetEditQt4-PortMonitor-SpectralPeaks.png|A monitor for spectral peaks is also working.
Image:NetEditQt4-PortMonitor-DummyChordViews.png|Chord views from the Annotator nicely embeded on processing boxes. Still using dummy data.
Image:NetEditQt4-PortMonitor-RandomGenerated.png|This time the data is being read from the port. Still random but now other processing generates it.
Image:NetEditQt4-PortMonitor-RealTimeChords.png|At last, real time chord extraction with Tonnetz and KeySpace.
Image:NetEditQt4-Designer-Oscillator.png|Oscilloscope as Qt Designer plugin. It shows dummy data.
Image:NetEditQt4-Prototyper-OscillatorDummy.png|Oscilloscope loaded by the prototyper. Still no connection.
Image:NetEditQt4-Prototyper-Oscillator.png|Oscilloscope run-time connected to the underlying network!
Image:NetEditQt4-LedVumeter.png|Nicer vumeter with leds.
Image:NetEditQt4-Prototyper-Tonnetz.png|Tonnetz on the prototyper. Oscilloscope line color was changed as a Designer property.
Image:NetEditQt4-Prototyper-KeySpace.png|KeySpace on the Prototyper.
Image:NetEditQt4-Prototyper-EditedColors.png|After some color editions (just on the designer).
Image:NetEditQt4-Designer-EditColorProperties.png|Changing the color properties on the Qt Designer.
Image:NetEditQt4-Prototyper-TonalWithIndicators.png|Adding the playback and backend indicators.
Image:NetEditQt4-Prototyper-Spectrums.png|Back to the SMSMess: Adding SpectrumView to the Prototyper.
Image:NetEditQt4-Prototyper-Peaks.png|...and the Spectral Peaks.
Image:NetEditQt4-PolarChromaPeaks.png|Polar Chroma Peaks: See the peaks on an octave circle.
Image:NetEditQt4-Prototyper-PolarChromaPeaks.png|Polar Chroma Peaks on the prototyper.
Image:NetEditQt4-Monitors-ChordRanking.png|Seeing other kind of chords (7th, Dom7, Aug, Dim...) with the Chord Ranking view.
Image:NetEditQt4-MultipleJackInstances.png|Now Jack mode allows to have several non-conflicting instances of NetEditor and Prototyper.
Image:NetEditQt4-Piping.png|Shifting and detecting chords in pipeline.
Image:Netwin.JPG|The NetworkEditor working in Windows, even with the monitors!
Image:NetwEditQt4-WinSimpleOscillator.png|Windows port: A fully working version (with icons)
Image:NetwEditQt4-WinPrototyperFirstTry.png|Windows port: A first try with prototyper (Qt4.1.1)
Image:NetwEditQt4-PluginWidgetsIcons.png|Some cute icons for the designer plugins.
Image:NetEditQt4-TonalAndSMSAnalysis.png|Tonal and SMS analysis at the same time.
Image:NetEditQt4-OpenRecentFiles.png|By pressing longer the 'open' icon you get a popup menu with the recent networks.
</gallery>
