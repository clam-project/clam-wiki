Chordata is an easy to use application, built using the CLAM framework,
to analyze the tonal features (harmony, chords...) of your digital music
and explore them by navigating along the song using different useful views.
It is addressed to amateur musicians who want to know the chords of their favorite songs
but it is also very useful to get insight of the music itself.

[[Image:chordata.png|center]]


== Selecting a song ==

By clicking on the 'Open' icon ([[Image:Open.png]), a window will pop up.
You can choose any audio file in your hard drive.
The application supports many formats: ogg, wav, mp3, flac, aiff... but not wma, 

Once you select the song, the application will start to analyze it.
Depending on your machine and your operating system that could last a couple of minutes or some few seconds.

[[Image:chordata-analyzing.png|center]]

As soon as the analysis ends the song starts playing and the views start moving.

== Navigating along the song ==


The usage of the buttons to play [[Image:Icon-Play.png]], pause [[Image:Icon-Pause.png]] and stop [[Image:Icon-Stop.png]] should be obvious
as well as the use of the progress slider to move along the song.

But if you are playing an instrument while looking at the application keyboard bindings would be more useful than handling the mouse.
* You can play and pause using the space bar. 
* You can stop the song by using the Escape key
* You can move back and forward by using the left and right cursor keys.
* You can move back and forward faster by using the PgUp and PgDown keys.
* You can go to the end and to the beginning by using the Home and End keys.


== Understanding the views ==

=== Chord Segments ===


[[Image:chordata-tonnetz.png|center]]

The chord segment view shows a guess of which are the periods of time while a given chord is playing.
The red bar in the middle shows which is the current time position.
Each chord type picks a different color so that you can easily spot the chord sequence.

If the algorithm managed to pick up the chords, this view would suffice to know the chords,
but you will notice that, depending on the song, the guess is not very much fiable.
This is why chordata offers other views so you can decide yourself.

=== Chord Ranking ===

The chord ranking display a sorted list of bars for the likelihood of each chord at each moment.

=== Key Space ===

[[Image:Annotator-KeySpaceDetail.png|center]]

The key space just displays major (uppercase) and minor (lowercase) chords. 
They are arranged in the view so that the ones containing with similar notes are in closer positions.
A color spot is drop depending on the likelyhood of each chord being played.
When a clear major or minor chord plays, you will see a color spot surronding its position.

If the song is not playing other kind of chords than major and minor chords, 
this view introduces much less noise than the others which consider 7th, dim...

=== Pitchgramma ===

[[Image:chordata-pitchgram.png|center]]

The pitchgram is like an spectrogram but just containing the pitch likelihood for notes from G to F along time.
In this view you can easily view chord progressions or arpeggios that build the harmony of the song.

=== Tonnetz ===

[[Image:Annotator-TonnetzDetail.png|center]]

The tonnetz view also displays the pitch likelihood but they are arranged so spacial and tonal relations match.
The neighbors of each pitch cells correspond to different tonal intervals:
* to the right: a fifth up
* up and right:  a major third
* down and right:  a minor third

This way common chord modes have common cell group shapes:

[[Image:TonnetzChordShapes.png|center]]

=== Polar Peaks ===

=== Piano View ===

== Due Credit ==

* The application itself was developed a [http://code.google.com/soc/|Google Summer of Code] project by Pawel Bartkiewicz.
* Processing algorithm inside the chord detection is based on Christopher Harte work.
* Realtime algorithm enhancements and visualizations by Roman Goj (Summer of Code) and David García Garzón.
* Algorithm c++ port by Kate Noland and David García Garzón.
* KeySpace visualization is based on Emilia Gómez and Jordi Bonada code.
