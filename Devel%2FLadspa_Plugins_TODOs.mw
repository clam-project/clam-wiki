TODO
* (med) load plugins from LADSPA_PATH plus standard paths
* (low) add Ladspa tree and order it by cat
** (low) check for # of plugins to make a branch in the tree
* (med) check for non-valid directory
* (med) wrapper any plugin in the three
* (med) comment out non-necessary functions
* (med) refactor: extract ladspa specific to new files
* (med) extract implementation in file LadspaFactory.cxx
* (med) '''new''' make LadspaFactory.hxx non-coupled with ladspa headers. so uses of LFactory don't need #ifdef USE_LADSPA. use Pimpl C++ idiom in LFactory.
* (HIGH) update LadspaFactoryTest with "real" classes
* (med) fix non-string bug in LFactory map
* (HIGH) don't use config on LWrapper
* (med) don't use a Config in LWrapper. Use NullConfig instead.

high level TODOs to discuss:
* default values to controls
* save controls state with network
* automatic in-control sliders in networkeditor

DONE
* (med) Network: catch FactoryError
* load plugins from .so
* look out OM for Plugin and PluginLibrary
* check for empty LADSPA_PATH
* wrapper a plugin
* early support for libraries (through map and list)
* complementary data in the QTreeWidgetItem
* ID for ladspa tokenized with '|'
** could be useful to include the UID that provides Ladspa (instead of the full plugin name)
* first steps to instantiate using NetworkCanvas::addProcessing
* created LadspaPluginsExplorer (structure to hold Ladspa information)
* pass LadspaFactoryTest
* created LadspaFactory
* DummyLadspa to LadspaWrapper
* created LadspaWrapperCreator
