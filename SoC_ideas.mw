= This is Totally Draft =

But come back soon. We will have a list of clam SoC ideas by the end of this week (March 10th)

== Plugin system for a dynamically extensible framework ==
more here: [[Plugins TODOs]]

* clam plugins-hosts
** Multi-platform dynamic loading of factories. 
** Hierarchical organization
** Documentation and plugin metadata (ports meta-data, etc)
* plugin creation from a clam network
** NetworkEditor as ladspa host
** NetworkEditor as vst host
** Load CLAM processings/networks as ladspa plugins


== Network Scalability (aka Subnetworks) ==
* Infrastructure to control the flow of recursive networks
* Integrate user-defined networks in the component library.
* Make it usable in NetworkEditor application.
* ...

== CLAM in Python ==

* use a clam network with python
* use clam processings and processing-data with python. use it to visualize data, etc.
* write clam processings with python

== CLAM Swig interface ==

* write a CLAM swig interface that allows to use CLAM from any scriptring language.

== Improve usability of SMSTools workflow ==

(PAU: this seems quite old. I don't understand some of this items)

(David: Not that old. But maybe the rephrase can help)

* Separate configurations and files to process
* Configurations as a presets not as data (you open an audio file and analyze it using a given preset)
* Keep intermediate (analysis) objects (not a single statefull object as now)
* Enable the user to explicitly work with those intermediate objects.
* Minimize the provided data by using object information (sampling rate on analysis, and most of the analysis parameters for synthesis)

== Convergence of SMSTools and CLAM widgets infrastructure ==
* Transformation parameter automation using time-lines (ala ardour automation)
* Metadata based widgets
* Widgets interaction (zoom)
* Network based transformations. The user should be able to define the transformation chain using NetworkEditor.

== Real-time synthesizer using SMS models ==
* a new revamped but very simple salto synthesizer.
* a db of sms samples
* processings 
** to choose samples
** interpolate
** create stream flow
** etc.

== Vowel synthesizer ==

Build a educative program that would consist on synthesizing
different vowels by placing a point within the [http://en.wikipedia.org/wiki/Vowel_triangle Vowel triangle].
And also the reverse, given a vowel it places it in the triangle.
This could be enhanced by visualizing the effects on the peaks,
changing the synthesized gender or extracting user's track characteristics for synthesis.

== Integrate Faust with CLAM. And spectral transformations with Faust ==
probably a little out-of scope

== Enhancing chord detection algorithm for real-time use ==
that was a david idea

== Integration of aubio ==

* Integrate the aubio tempo library into CLAM and the CLAM Annotator

== Dynamic Network Sequencing ==

* Implement a simple interface that would allow a user to sequence
(in time) changes to a CLAM::Network. These changes would be mainly
connections between Processing objects but maybe also new configurations...
* Related to this, create a temporal control generator that generates
controls every t seconds.

== CLAM for video spike ==

* Integrate video processing/playback capabilities to CLAM
* Maybe through the use of Gstreamer?

== Processing class generator App/Widget ==

* Allow users to create a new Processing class by just specifying ports
and behavior of Do() in a graphical widget
* Maybe to integrate into NetworkEditor

== Integracio d'interficies Qt al framework de plugins d'audio VST ==
( Currently taken (Pol) )
