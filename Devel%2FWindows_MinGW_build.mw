We are currently generating Windows binaries crosscompiling from Linux.
In [[Devel/Windows MinGW cross compile]] we give a detailed procedure
that could give some clues if you want to natively compile in Windows
using MinGW.

http://ovh.dl.sourceforge.net/sourceforge/dev-cpp/devcpp-4.9.9.2_setup.exe

----

Warning: the instructions below are not complete, so You will not be able to complete the job.

'''Setup a MinGW/MSYS environment to build CLAM on Windows 2000/XP.'''

In order to compile CLAM framework on Windows, You will need [http://www.scons.org/ scons].
Scons is a python script that help developers to build their project. So You will need [http://www.python.org/ Python] too. Windows's Python implementation has a limitation on the length of the command line it can execute, so, in order to remove this limitation You will need also [https://sourceforge.net/projects/pywin32/ pywin32].

Once that Python, pywin32 and scons are installed on Your system, You're ready to install [http://www.mingw.org/ MSYS] and [http://www.mingw.org/ MinGW]. MSYS is a minimal Unix-like environment for Windows and can (not too much) easily be replaced by any other similar tool. MinGW is a gcc based compiler and a set of utilities able to build pure Windows binaries. MSYS/MinGW distribution is mainly packaged in tar.gz form. They have also some installers, but they are a bit outdated, so it is better to install .tar.gz packages by hand. All MSYS and MinGW files can be retrieved from [http://sf.net/project/showfiles.php?group_id=2435 this page].

A good choice to extract packages is [http://www.7-zip.org 7-zip] a powerful opensource file archiver.

'''First we need to install the MSYS environment.''' Install first the ''MSYS Base System''. I prefer 1.0.11 version, since it has more updated tools. You will need almost all non source packages, so it's better to download them all. You need to extract first msysCORE and MSYS. These are needed to have a very minimal shell.
Once extracted, start msys.bat and continue to extract packages from this shell. This is a required since the only tool I've found that is able to extract correctly these packages is MSYS tar (With other tools You will have a lot of empty file). You may need to extract some packages with an external archiver, such as the one containing updated packages for tar, bzip2, bash: You're still using Windows, so You will not be able to replace a file/program in use.

To extract packages with tar, issue one of these command:

''tar jxvf foo.tar.bz2''

or

''tar zxvf foo.tar.gz''

You need the first to extract bzipped tar files, You need the other to extract gzipped tar files.


Be careful to extract the packages in a location that doesn't contain spaces (i.e.: '''NOT''' inside ''C:\Documents and Settings\User\MinGW\''.) or the msys.bat and a lot of other tools later, will not work. I Usually choose something like ''C:\Programs\GNU\msys\'' as installation base dierectory for MSYS/MinGW.

Once the ''MSYS Base System'' is installed You need to install the packages inside ''MSYS Supplementary Tools'' too. Once again You will need almost all non source packages, so it's better to download them all. Install them from the MSYS shell.

Once all the packages are extracted You will find a lot of directory in the MSYS installation. Some package will extract in their own directory, so You need to manually move their content (usually bin/, man/, info/ etc.) outside that directory. On most Unix-like system documentation goes inside the share directory, so I usually move man/, info/ and doc/ inside share/, after the package extraction.

'''Configure the MSYS environment.'''
On a Unix-like system, configuration goes into files inside /etc/. The main configuration for MSYS is handled by ''/etc/fstab'' and ''/etc/profile''. In the first file You can specify mount points. In the other You can specify options common to all users.

''/etc/fstab'':
if You are not used with mount points You can think a mount point like a link to a directory in Your system. This is misleading, but may help You to make an idea of what You are trying to setup. Once You start MSYS shell, it put Yourself in Your MSYS home: ''/home/username/''. This directory is located inside the home/ directory in the MSYS installation directory. You can instruct MSYS to put /home/ somewhere else. I usually like to make MSYS homes and Windows home to coincide, 'cause I want great integration of all the tools, so I usually put a line in fstab like this

F:/DOCUME~1/       /home/

Where I've used the short name of ''Document and Settings'' 'cause I cannot use space in fstab.
Other directories You may want to put outside MSYS installation directory is /mingw, but I usually '''create MinGW''' directory just there. You will need this directory, so create it and edit fstab as needed (if needed).

''/etc/profile'':
Here You can define ENVIRONMENT variables, command alias and other useful things.
The PATH variable is inherited by the user Windows PATH, so I often choose to put some programs in Windows PATH, instead of MSYS PATH. The main example is for '''Python''' and '''scons'''. Where You will need to add ''F:\Programmi\Python25'' and ''F:\Programmi\Python25\Scripts'' to it. I will suggest You to do so, but if You don't like this idea, You can add a line like this to the end of /etc/profile:

PATH=$PATH:/f/Programmi/Python25:/f/Programmi/Python25/Scripts

and the results will be quite the same.
Later You will need '''pkg-config''', a tool that helps compiling programs. pkg-config usually stores its configuration files inside ''/usr/lib/pkgconfig'', but with MSYS/MinGW, You usually want that it will read them from ''/mingw/lib/pkgconfig''. You can obtain this by setting this environment variable in the /etc/profile:

PKG_CONFIG_PATH=/mingw/lib/pkgconfig

'''Installing MinGW'''
You need at least the following packages:
''GNU Binutils'',
''MinGW API for MS-Windows'',
''MinGW Runtime'',
''GCC''.
I'm used to install latest available package for everything except GCC where I install gcc 3.4.5.

Extract the packages inside mingw/ directory (The one that You have created while configuring MSYS).
