This simple program just plays a file specified by command line to the audio output.
To achieve this we created a Network 


 #include <CLAM/Network.hxx>
 #include <CLAM/PANetworkPlayer.hxx>
 #include <CLAM/MonoAudioFileReaderConfig.hxx>
 #include <CLAM/XMLStorage.hxx>
 
 int error(const std::string & msg)
 {
 	std::cerr << msg << std::endl;
 	return -1;
 }
 
 int main(int argc, char ** argv)
 {
 	if (argc!=2) return error ("needs a filename.");
 
 	CLAM::Network network;
  
 	std::string reader = network.AddProcessing("MonoAudioFileReader");
  
 	// Configure the reader
 	CLAM::MonoAudioFileReaderConfig cfg;
 	cfg.AddAll();
 	cfg.UpdateData();
 	cfg.GetSourceFile().OpenExisting(argv[1]);
 	if (!cfg.GetSourceFile().IsReadable())
 		 return error("Could not open the file");
 	network.ConfigureProcessing(reader, cfg);
 
  	// Add an audio sink and connect its input to the reader's output
 	std::string sink = network.AddProcessing("AudioSink");
 	network.ConnectPorts(reader+".Samples Read", sink+".AudioIn");
 
 	// Set the audio backend to PortAudio
 	network.SetPlayer(new CLAM::PANetworkPlayer);
 	network.Start();
 	sleep(4); // Play just during 4s
 	network.Stop();
 }
