'''Ongoing work on cross compiling CLAM for Windows from Ubuntu'''

== Installing mingw32 and Wine in ubuntu ==

 sudo apt-get install mingw32
 sudo apt-get install wine

You can test that that works

 $ cat > hello.cxx <<EOF
 > #include <iostream>
 > int main()
 > {
 >         std::cout << "Hello world"  << std::endl;
 > }
 > EOF
 
 $ i586-mingw32msvc-g++ hello.cxx
 
 $ file a.exe
 a.exe: MS-DOS executable PE  for MS Windows (console) Intel 80386 32-bit
 
 $ ./a.exe
 Hello world

So it works! We are building and executing a windows binary.

== Crosscompiling with Qt ==

Lets download Qt.

 $ wget -c http://ftp.iasi.roedu.net/mirrors/ftp.trolltech.com/qt/source/qt-win-opensource-4.2.3-mingw.exe
 $ chmod a+x qt-win-opensource-4.2.3-mingw.exe
 $ ./qt-win-opensource-4.2.3-mingw.exe

I accepted to intall mingw32 again but in the fake windows.
This installs by default Qt on ~/.wine/fake_windows/Qt/4.2.3/, so

 $ ~/.wine/fake_windows/Qt/4.2.3/bin/designer.exe

[[image:Mingw32DesignerUnderWine.png|thumb|Mingw Designer running on wine]]

 $ export QTDIR=~/.wine/fake_windows/Qt/4.2.3/

Edit the following file helloqt.cxx

 #include <QtGui/QApplication>
 #include <QtGui/QMessageBox>

 int main(int argc, char** argv)
 {
         QApplication app(argc,argv);
         QMessageBox::warning(0,"Warning","Windows is about to be deprecated as development platform!");
 }

And now lets compile it.

 $ i586-mingw32msvc-g++ -L $QTDIR/lib -I $QTDIR/include a.cxx -l QtCore4 -lQtGui4

Windows requires dll's to be on PATH or on the same dir.
I don't know how to set PATH on wine so i just copied them on the binary folder.

 $ cp $QTDIR/bin/*dll .
 $ ./a.exe


[[image:Mingw32WineHelloQt.png|center|Our fist crosscompiled Qt app]]

== ==
