= CLAM Music Annotator ver 0.3.1 =

[[Image:Annotator-SplashScreen.png|thumb|Splash screen]]


== Purpose ==

The CLAM Music Annotator is a tool that can be used to visualize, check and
modify music information extracted from audio: low level features, note
segmentation, chords, structure... The tool is intended to be useful for
the music information retrieval research whenever you need to:

* Supervise and correct the results of automated audio feature extraction algorithms.
* Generate manually edited annotations of audio as training examples or ground truth for those algorithms.

== Features ==

[[Image:Annotator-Tonnetz-Keyspace.png|thumb|The keyspace and tonnetz views to visualize the automatic chord extraction]]

The CLAM Annotator is not tied to a fixed description scheme (the set of
attributes). You can define the working attribute set by providing an XML
description schema definition. Sample description schemes and an extraction
programs are provided with the Annotator but you could implement your own
one with different algorithms and attributes. Also tools are provided to
select and join attributes from the output of several description sources.

[[Image:Annotator-SizedSegments.png|thumb|Editing sized segments]]

Other key features are:
* Attribute types:
** Free text
** Enumeration
** Bounded float
** Bounded integer
** Float array
** Frame Division (Equidistant division)
** Segmentations (Sizeless, Gapless, Overlapless or Free)
** ... more to come
* Several time segmentations and frame divisions can be defined at once (notes, structural parts, bars, beats, different frame sizes...).
* Each segmentation or frame division have its own set of attributes to attach to their childs.
* Auralization for the segmentations (click on the beggining)
* Auralization for the low-level descriptor (magnitude to freq)
* Instant views:
** [http://members2.boo.net/~knuth/ Tonnetz view] for PCP like (tones correlation) display
** [http://www.iua.upf.es/mtg/publicacions.php?lng=eng&wkshpid=260 Key Space view] for mayor and minor chords correlation
** ... more to come

== Screenshots and videos ==

See the [[Annotator screenshots]]  gallery.

Annotator videos (quicktime movie "mov"):

# [http://clam.iua.upf.edu/videos/annotator_1.mov Overview of the Simac Annotator]
# [http://clam.iua.upf.edu/videos/annotator_2.mov Edition of song properties]
# [http://clam.iua.upf.edu/videos/annotator_3.mov Visualization of low-level descriptors]
# [http://clam.iua.upf.edu/videos/annotator_4.mov Auralization]
# [http://clam.iua.upf.edu/videos/annotator_5.mov Versatile Description Schema for Annotation tasks]
# [http://clam.iua.upf.edu/videos/annotator_6.mov Custom local descriptors]
# [http://clam.iua.upf.edu/videos/annotator_7.mov Segment edition]
# [http://clam.iua.upf.edu/videos/annotator_8.mov Task Manager]
# A video with chord extractor views (the nice ones) will come soon!

== Download ==

Check out the [http://clam.iua.upf.edu/download.html CLAM download page].



== Included Extractors ==

CLAM Music Annotator architecture is open to add extractors and data sources.
Just by providing an executable following the proper command line and output conventions.
Following command line and output conventions is not a major issue, 
we have successfully used python to wrap existing extractors that didn't conform.

CLAM Music Annotator comes with several extractors and data sources:

=== ClamExtractorExample ===

The ClamExtractorExample is a dummy example of extractor.
It generates three kind of descriptors:

* Low level spectral descriptors using CLAM
* ID3 descriptors
* Random segments (yes, they are random, just to test the Music Annotator)

=== ChordExtractor ===

The chord extractor extracts segments labeled with chords.
It uses Christopher Harte algorithm with some minor variations.
It has been developed as a collaboration between the [http://www.elec.qmul.ac.uk Queen Mary University of London] and the [http://www.iua.upf.edu Universitat Pompeu Fabra]

 TODO: Reference to the paper

== Collective Annotation, the BOCA client ==

[[Image:Annotator-BocaPendingAnnotations.png|thumb|Checking pending annotations on the BOCA website]]
[[Image:Annotator-AccessingSimacServices.png|thumb|Taking the files related to a BOCA task and uploading them back using the Simac Services ]]

BOCA is the Barebone Of Collective Annotations. 
It's a web application that centralizes collective annotation campaigns.
Hand annotation is a hard task for researchers, but, by sharing them,
as for software, you'll get more than you give.

BocaClient is a program that takes the task files BOCA generates and builds a Music Annotator
project by doing queries to the Simac Web Services.
After saving the project, the BocaClient uploads the changes back.

 TODO: Add links
