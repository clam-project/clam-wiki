CLAM's visual builder is known as the NetworkEditor. It allows to generate an application --or its processing engine-- by graphically connecting objects in a patch. In the present tutorial we will learn the main funcionalities of the NetworkEditor step by step.

== First steps ==

*Execute the Network Editor program. The program should look like this:

(possible screenshot)

*Not very exciting, right? But now go to File->Load. With the file browser navigate to ../build. There you will find a number of examples. 

*Open the freqshift-resamount.xml file. Your NetworkEditor should now look like the following screenshot:

(possible screenshot)

*Because there is a Processing in red, it means that we cannot start playing around with this network yet. We could try to configure it but first we need to understand a few concepts. So, let's take a few steps back and start over again.


== Creating the simplest Network ==

*Select File New. You will get a blank canvas again.
*Now we are going to add a number of Processings. A Processing object is the basic building block in CLAM (In this tutorial you will understand the basics but if you want to dive more into its meaning you should look in the other CLAM documentation or articles). Processings are listed on the left hand menu in the NetworkEditor, grouped by categories. Click on the Audio File I/O Category in order to expand the view and see what Processings are available.

(possible screenshot)

*Click on the MonoAudioFileReader and drag it to the canvas on the right side. It should now look like this:

(possible screenshot)

*The Processing is "red" because it is not "configured" properly. Configurations in CLAM are those parameters that need to be set before run-time. If a Processing is not configured, the network cannot be started. Right-click on the red Processing. The following pop up screen should appear:

(possible screenshot)

*This is indeed the graphical representation of a simple configuration. It turns out that the Processing is not correctly configured because it expects a file name to open. Click on the "..." and select a MONO audio file from your hard drive (if you only have stereo, you will have to repeat the steps again but using MultichannelAudioFileReader instead). After clicking ok on the configurator, the Processing should be in Green now.

(possible screenshot)

*Now you can run this network by simply selecting NetworkActions->StartNetwork. All you can see is that the processing turns a different color. But no sound is produced. That is because we have still not added an Audio Output!
*Go to the Input/Output category and select and drag the AudioOut processing object. If you start the network again you will still have no output sound.
*We need to first connect the two processing objects. Those blue outlets that you see at the right of the MonoAudioFileReader and the left of the AudioOut are called "Ports" and they are used to define the main data flow in a network. You can connect two ports as long as they expect the same data type (e.g. you cannot connect an Audio Port to a Spectrum Port). In our case both are Audio Port so we can indeed connect them. Click on one of the ports and move the mouse while holding the mouse button, a straight line will appear. Drive the end of that line to the other port and the ports will be connected with an spline just as in the following screenshot (you can always remove a connection by selecting it and pressing Delete on the keyboard):

(possible screenshot)

*Now you can start the network and you will hear the playback of the sound file you selected. If you activated the Loop button in the MonoAudioFileReader configurarion the sound will loop.
